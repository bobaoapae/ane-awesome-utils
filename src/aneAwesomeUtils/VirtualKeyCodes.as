package aneAwesomeUtils {
public class VirtualKeyCodes {
    public static const VK_LBUTTON:uint = 0x01; // Left mouse button
    public static const VK_RBUTTON:uint = 0x02; // Right mouse button
    public static const VK_CANCEL:uint = 0x03; // Control-break processing
    public static const VK_MBUTTON:uint = 0x04; // Middle mouse button
    public static const VK_XBUTTON1:uint = 0x05; // X1 mouse button
    public static const VK_XBUTTON2:uint = 0x06; // X2 mouse button
    public static const VK_BACK:uint = 0x08; // Backspace key
    public static const VK_TAB:uint = 0x09; // Tab key
    public static const VK_CLEAR:uint = 0x0C; // Clear key
    public static const VK_RETURN:uint = 0x0D; // Enter key
    public static const VK_SHIFT:uint = 0x10; // Shift key
    public static const VK_CONTROL:uint = 0x11; // Ctrl key
    public static const VK_MENU:uint = 0x12; // Alt key
    public static const VK_PAUSE:uint = 0x13; // Pause key
    public static const VK_CAPITAL:uint = 0x14; // Caps lock key
    public static const VK_KANA:uint = 0x15; // IME Kana mode
    public static const VK_HANGUL:uint = 0x15; // IME Hangul mode
    public static const VK_IME_ON:uint = 0x16; // IME On
    public static const VK_JUNJA:uint = 0x17; // IME Junja mode
    public static const VK_FINAL:uint = 0x18; // IME final mode
    public static const VK_HANJA:uint = 0x19; // IME Hanja mode
    public static const VK_KANJI:uint = 0x19; // IME Kanji mode
    public static const VK_IME_OFF:uint = 0x1A; // IME Off
    public static const VK_ESCAPE:uint = 0x1B; // Esc key
    public static const VK_CONVERT:uint = 0x1C; // IME convert
    public static const VK_NONCONVERT:uint = 0x1D; // IME nonconvert
    public static const VK_ACCEPT:uint = 0x1E; // IME accept
    public static const VK_MODECHANGE:uint = 0x1F; // IME mode change request
    public static const VK_SPACE:uint = 0x20; // Spacebar key
    public static const VK_PRIOR:uint = 0x21; // Page up key
    public static const VK_NEXT:uint = 0x22; // Page down key
    public static const VK_END:uint = 0x23; // End key
    public static const VK_HOME:uint = 0x24; // Home key
    public static const VK_LEFT:uint = 0x25; // Left arrow key
    public static const VK_UP:uint = 0x26; // Up arrow key
    public static const VK_RIGHT:uint = 0x27; // Right arrow key
    public static const VK_DOWN:uint = 0x28; // Down arrow key
    public static const VK_SELECT:uint = 0x29; // Select key
    public static const VK_PRINT:uint = 0x2A; // Print key
    public static const VK_EXECUTE:uint = 0x2B; // Execute key
    public static const VK_SNAPSHOT:uint = 0x2C; // Print screen key
    public static const VK_INSERT:uint = 0x2D; // Insert key
    public static const VK_DELETE:uint = 0x2E; // Delete key
    public static const VK_HELP:uint = 0x2F; // Help key
    public static const VK_KEY_0:uint = 0x30; // 0 key
    public static const VK_KEY_1:uint = 0x31; // 1 key
    public static const VK_KEY_2:uint = 0x32; // 2 key
    public static const VK_KEY_3:uint = 0x33; // 3 key
    public static const VK_KEY_4:uint = 0x34; // 4 key
    public static const VK_KEY_5:uint = 0x35; // 5 key
    public static const VK_KEY_6:uint = 0x36; // 6 key
    public static const VK_KEY_7:uint = 0x37; // 7 key
    public static const VK_KEY_8:uint = 0x38; // 8 key
    public static const VK_KEY_9:uint = 0x39; // 9 key
    public static const VK_KEY_A:uint = 0x41; // A key
    public static const VK_KEY_B:uint = 0x42; // B key
    public static const VK_KEY_C:uint = 0x43; // C key
    public static const VK_KEY_D:uint = 0x44; // D key
    public static const VK_KEY_E:uint = 0x45; // E key
    public static const VK_KEY_F:uint = 0x46; // F key
    public static const VK_KEY_G:uint = 0x47; // G key
    public static const VK_KEY_H:uint = 0x48; // H key
    public static const VK_KEY_I:uint = 0x49; // I key
    public static const VK_KEY_J:uint = 0x4A; // J key
    public static const VK_KEY_K:uint = 0x4B; // K key
    public static const VK_KEY_L:uint = 0x4C; // L key
    public static const VK_KEY_M:uint = 0x4D; // M key
    public static const VK_KEY_N:uint = 0x4E; // N key
    public static const VK_KEY_O:uint = 0x4F; // O key
    public static const VK_KEY_P:uint = 0x50; // P key
    public static const VK_KEY_Q:uint = 0x51; // Q key
    public static const VK_KEY_R:uint = 0x52; // R key
    public static const VK_KEY_S:uint = 0x53; // S key
    public static const VK_KEY_T:uint = 0x54; // T key
    public static const VK_KEY_U:uint = 0x55; // U key
    public static const VK_KEY_V:uint = 0x56; // V key
    public static const VK_KEY_W:uint = 0x57; // W key
    public static const VK_KEY_X:uint = 0x58; // X key
    public static const VK_KEY_Y:uint = 0x59; // Y key
    public static const VK_KEY_Z:uint = 0x5A; // Z key
    public static const VK_LWIN:uint = 0x5B; // Left Windows key
    public static const VK_RWIN:uint = 0x5C; // Right Windows key
    public static const VK_APPS:uint = 0x5D; // Applications key
    public static const VK_SLEEP:uint = 0x5F; // Computer Sleep key
    public static const VK_NUMPAD0:uint = 0x60; // Numeric keypad 0 key
    public static const VK_NUMPAD1:uint = 0x61; // Numeric keypad 1 key
    public static const VK_NUMPAD2:uint = 0x62; // Numeric keypad 2 key
    public static const VK_NUMPAD3:uint = 0x63; // Numeric keypad 3 key
    public static const VK_NUMPAD4:uint = 0x64; // Numeric keypad 4 key
    public static const VK_NUMPAD5:uint = 0x65; // Numeric keypad 5 key
    public static const VK_NUMPAD6:uint = 0x66; // Numeric keypad 6 key
    public static const VK_NUMPAD7:uint = 0x67; // Numeric keypad 7 key
    public static const VK_NUMPAD8:uint = 0x68; // Numeric keypad 8 key
    public static const VK_NUMPAD9:uint = 0x69; // Numeric keypad 9 key
    public static const VK_MULTIPLY:uint = 0x6A; // Multiply key
    public static const VK_ADD:uint = 0x6B; // Add key
    public static const VK_SEPARATOR:uint = 0x6C; // Separator key
    public static const VK_SUBTRACT:uint = 0x6D; // Subtract key
    public static const VK_DECIMAL:uint = 0x6E; // Decimal key
    public static const VK_DIVIDE:uint = 0x6F; // Divide key
    public static const VK_F1:uint = 0x70; // F1 key
    public static const VK_F2:uint = 0x71; // F2 key
    public static const VK_F3:uint = 0x72; // F3 key
    public static const VK_F4:uint = 0x73; // F4 key
    public static const VK_F5:uint = 0x74; // F5 key
    public static const VK_F6:uint = 0x75; // F6 key
    public static const VK_F7:uint = 0x76; // F7 key
    public static const VK_F8:uint = 0x77; // F8 key
    public static const VK_F9:uint = 0x78; // F9 key
    public static const VK_F10:uint = 0x79; // F10 key
    public static const VK_F11:uint = 0x7A; // F11 key
    public static const VK_F12:uint = 0x7B; // F12 key
    public static const VK_F13:uint = 0x7C; // F13 key
    public static const VK_F14:uint = 0x7D; // F14 key
    public static const VK_F15:uint = 0x7E; // F15 key
    public static const VK_F16:uint = 0x7F; // F16 key
    public static const VK_F17:uint = 0x80; // F17 key
    public static const VK_F18:uint = 0x81; // F18 key
    public static const VK_F19:uint = 0x82; // F19 key
    public static const VK_F20:uint = 0x83; // F20 key
    public static const VK_F21:uint = 0x84; // F21 key
    public static const VK_F22:uint = 0x85; // F22 key
    public static const VK_F23:uint = 0x86; // F23 key
    public static const VK_F24:uint = 0x87; // F24 key
    public static const VK_NUMLOCK:uint = 0x90; // Num lock key
    public static const VK_SCROLL:uint = 0x91; // Scroll lock key
    public static const VK_LSHIFT:uint = 0xA0; // Left Shift key
    public static const VK_RSHIFT:uint = 0xA1; // Right Shift key
    public static const VK_LCONTROL:uint = 0xA2; // Left Ctrl key
    public static const VK_RCONTROL:uint = 0xA3; // Right Ctrl key
    public static const VK_LMENU:uint = 0xA4; // Left Alt key
    public static const VK_RMENU:uint = 0xA5; // Right Alt key
    public static const VK_BROWSER_BACK:uint = 0xA6; // Browser Back key
    public static const VK_BROWSER_FORWARD:uint = 0xA7; // Browser Forward key
    public static const VK_BROWSER_REFRESH:uint = 0xA8; // Browser Refresh key
    public static const VK_BROWSER_STOP:uint = 0xA9; // Browser Stop key
    public static const VK_BROWSER_SEARCH:uint = 0xAA; // Browser Search key
    public static const VK_BROWSER_FAVORITES:uint = 0xAB; // Browser Favorites key
    public static const VK_BROWSER_HOME:uint = 0xAC; // Browser Start and Home key
    public static const VK_VOLUME_MUTE:uint = 0xAD; // Volume Mute key
    public static const VK_VOLUME_DOWN:uint = 0xAE; // Volume Down key
    public static const VK_VOLUME_UP:uint = 0xAF; // Volume Up key
    public static const VK_MEDIA_NEXT_TRACK:uint = 0xB0; // Next Track key
    public static const VK_MEDIA_PREV_TRACK:uint = 0xB1; // Prev Track key
    public static const VK_MEDIA_STOP:uint = 0xB2; // Stop Media key
    public static const VK_MEDIA_PLAY_PAUSE:uint = 0xB3; // Play/Pause Media key
    public static const VK_LAUNCH_MAIL:uint = 0xB4; // Start Mail key
    public static const VK_LAUNCH_MEDIA_SELECT:uint = 0xB5; // Select Media key
    public static const VK_LAUNCH_APP1:uint = 0xB6; // Start Application 1 key
    public static const VK_LAUNCH_APP2:uint = 0xB7; // Start Application 2 key
    public static const VK_OEM_1:uint = 0xBA; // ';:' for US
    public static const VK_OEM_PLUS:uint = 0xBB; // '+' any country
    public static const VK_OEM_COMMA:uint = 0xBC; // ',' any country
    public static const VK_OEM_MINUS:uint = 0xBD; // '-' any country
    public static const VK_OEM_PERIOD:uint = 0xBE; // '.' any country
    public static const VK_OEM_2:uint = 0xBF; // '/?' for US
    public static const VK_OEM_3:uint = 0xC0; // '`~' for US
    public static const VK_OEM_4:uint = 0xDB; // '[{' for US
    public static const VK_OEM_5:uint = 0xDC; // '\|' for US
    public static const VK_OEM_6:uint = 0xDD; // ']}' for US
    public static const VK_OEM_7:uint = 0xDE; // ''"' for US
    public static const VK_OEM_8:uint = 0xDF; // Misc characters
    public static const VK_OEM_102:uint = 0xE2; // Angle bracket or backslash on RT 102-key keyboard
    public static const VK_PROCESSKEY:uint = 0xE5; // IME PROCESS key
    public static const VK_PACKET:uint = 0xE7; // Used to pass Unicode characters as if they were keystrokes
    public static const VK_ATTN:uint = 0xF6; // Attn key
    public static const VK_CRSEL:uint = 0xF7; // CrSel key
    public static const VK_EXSEL:uint = 0xF8; // ExSel key
    public static const VK_EREOF:uint = 0xF9; // Erase EOF key
    public static const VK_PLAY:uint = 0xFA; // Play key
    public static const VK_ZOOM:uint = 0xFB; // Zoom key
    public static const VK_NONAME:uint = 0xFC; // Reserved
    public static const VK_PA1:uint = 0xFD; // PA1 key
    public static const VK_OEM_CLEAR:uint = 0xFE; // Clear key
}
}
